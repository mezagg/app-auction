{"dependencies":[{"name":"../../_lib/buildMatchFn.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"WfxmnHvZGPGMeHFDPiUVBiH8bNo=","exportNames":["*"],"imports":1}},{"name":"../../_lib/buildMatchPatternFn.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":72,"index":131}}],"key":"L8Xdo6QVO2i+lcAsQwScZEOC6W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"match\", {\n    enumerable: true,\n    get: function () {\n      return match;\n    }\n  });\n  var _libBuildMatchFnJs = require(_dependencyMap[0], \"../../_lib/buildMatchFn.js\");\n  var _libBuildMatchPatternFnJs = require(_dependencyMap[1], \"../../_lib/buildMatchPatternFn.js\");\n  var matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\n  var parseOrdinalNumberPattern = /\\d+/i;\n  var matchEraPatterns = {\n    narrow: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\n    abbreviated: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\n    wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i\n  };\n  var parseEraPatterns = {\n    any: [/^f/i, /^e/i]\n  };\n  var matchQuarterPatterns = {\n    narrow: /^[1234]/i,\n    abbreviated: /^q[1234]/i,\n    wide: /^[1234](\\.)? kvartal/i\n  };\n  var parseQuarterPatterns = {\n    any: [/1/i, /2/i, /3/i, /4/i]\n  };\n  var matchMonthPatterns = {\n    narrow: /^[jfmasond]/i,\n    abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\\.?/i,\n    wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i\n  };\n  var parseMonthPatterns = {\n    narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n    any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^aug/i, /^s/i, /^o/i, /^n/i, /^d/i]\n  };\n  var matchDayPatterns = {\n    narrow: /^[smtofl]/i,\n    short: /^(sø|ma|ti|on|to|fr|lø)/i,\n    abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i,\n    wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i\n  };\n  var parseDayPatterns = {\n    any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i]\n  };\n  var matchDayPeriodPatterns = {\n    narrow: /^(midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i,\n    any: /^([ap]\\.?\\s?m\\.?|midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten))/i\n  };\n  var parseDayPeriodPatterns = {\n    any: {\n      am: /^a(\\.?\\s?m\\.?)?$/i,\n      pm: /^p(\\.?\\s?m\\.?)?$/i,\n      midnight: /^midn/i,\n      noon: /^midd/i,\n      morning: /morgen/i,\n      afternoon: /ettermiddag/i,\n      evening: /kveld/i,\n      night: /natt/i\n    }\n  };\n  var match = {\n    ordinalNumber: (0, _libBuildMatchPatternFnJs.buildMatchPatternFn)({\n      matchPattern: matchOrdinalNumberPattern,\n      parsePattern: parseOrdinalNumberPattern,\n      valueCallback: value => parseInt(value, 10)\n    }),\n    era: (0, _libBuildMatchFnJs.buildMatchFn)({\n      matchPatterns: matchEraPatterns,\n      defaultMatchWidth: \"wide\",\n      parsePatterns: parseEraPatterns,\n      defaultParseWidth: \"any\"\n    }),\n    quarter: (0, _libBuildMatchFnJs.buildMatchFn)({\n      matchPatterns: matchQuarterPatterns,\n      defaultMatchWidth: \"wide\",\n      parsePatterns: parseQuarterPatterns,\n      defaultParseWidth: \"any\",\n      valueCallback: index => index + 1\n    }),\n    month: (0, _libBuildMatchFnJs.buildMatchFn)({\n      matchPatterns: matchMonthPatterns,\n      defaultMatchWidth: \"wide\",\n      parsePatterns: parseMonthPatterns,\n      defaultParseWidth: \"any\"\n    }),\n    day: (0, _libBuildMatchFnJs.buildMatchFn)({\n      matchPatterns: matchDayPatterns,\n      defaultMatchWidth: \"wide\",\n      parsePatterns: parseDayPatterns,\n      defaultParseWidth: \"any\"\n    }),\n    dayPeriod: (0, _libBuildMatchFnJs.buildMatchFn)({\n      matchPatterns: matchDayPeriodPatterns,\n      defaultMatchWidth: \"any\",\n      parsePatterns: parseDayPeriodPatterns,\n      defaultParseWidth: \"any\"\n    })\n  };\n});","lineCount":105,"map":[[7,2,90,0,"Object"],[7,8,90,0],[7,9,90,0,"defineProperty"],[7,23,90,0],[7,24,90,0,"exports"],[7,31,90,0],[8,4,90,0,"enumerable"],[8,14,90,0],[9,4,90,0,"get"],[9,7,90,0],[9,18,90,0,"get"],[9,19,90,0],[10,6,90,0],[10,13,90,0,"match"],[10,18,90,0],[11,4,90,0],[12,2,90,0],[13,2,1,0],[13,6,1,0,"_libBuildMatchFnJs"],[13,24,1,0],[13,27,1,0,"require"],[13,34,1,0],[13,35,1,0,"_dependencyMap"],[13,49,1,0],[14,2,2,0],[14,6,2,0,"_libBuildMatchPatternFnJs"],[14,31,2,0],[14,34,2,0,"require"],[14,41,2,0],[14,42,2,0,"_dependencyMap"],[14,56,2,0],[15,2,4,0],[15,6,4,6,"matchOrdinalNumberPattern"],[15,31,4,31],[15,34,4,34],[15,46,4,46],[16,2,5,0],[16,6,5,6,"parseOrdinalNumberPattern"],[16,31,5,31],[16,34,5,34],[16,40,5,40],[17,2,7,0],[17,6,7,6,"matchEraPatterns"],[17,22,7,22],[17,25,7,25],[18,4,8,2,"narrow"],[18,10,8,8],[18,12,8,10],[18,55,8,53],[19,4,9,2,"abbreviated"],[19,15,9,13],[19,17,9,15],[19,60,9,58],[20,4,10,2,"wide"],[20,8,10,6],[20,10,10,8],[21,2,11,0],[21,3,11,1],[22,2,12,0],[22,6,12,6,"parseEraPatterns"],[22,22,12,22],[22,25,12,25],[23,4,13,2,"any"],[23,7,13,5],[23,9,13,7],[23,10,13,8],[23,15,13,13],[23,17,13,15],[23,22,13,20],[24,2,14,0],[24,3,14,1],[25,2,16,0],[25,6,16,6,"matchQuarterPatterns"],[25,26,16,26],[25,29,16,29],[26,4,17,2,"narrow"],[26,10,17,8],[26,12,17,10],[26,22,17,20],[27,4,18,2,"abbreviated"],[27,15,18,13],[27,17,18,15],[27,28,18,26],[28,4,19,2,"wide"],[28,8,19,6],[28,10,19,8],[29,2,20,0],[29,3,20,1],[30,2,21,0],[30,6,21,6,"parseQuarterPatterns"],[30,26,21,26],[30,29,21,29],[31,4,22,2,"any"],[31,7,22,5],[31,9,22,7],[31,10,22,8],[31,14,22,12],[31,16,22,14],[31,20,22,18],[31,22,22,20],[31,26,22,24],[31,28,22,26],[31,32,22,30],[32,2,23,0],[32,3,23,1],[33,2,25,0],[33,6,25,6,"matchMonthPatterns"],[33,24,25,24],[33,27,25,27],[34,4,26,2,"narrow"],[34,10,26,8],[34,12,26,10],[34,26,26,24],[35,4,27,2,"abbreviated"],[35,15,27,13],[35,17,27,15],[35,79,27,77],[36,4,28,2,"wide"],[36,8,28,6],[36,10,28,8],[37,2,29,0],[37,3,29,1],[38,2,30,0],[38,6,30,6,"parseMonthPatterns"],[38,24,30,24],[38,27,30,27],[39,4,31,2,"narrow"],[39,10,31,8],[39,12,31,10],[39,13,32,4],[39,18,32,9],[39,20,33,4],[39,25,33,9],[39,27,34,4],[39,32,34,9],[39,34,35,4],[39,39,35,9],[39,41,36,4],[39,46,36,9],[39,48,37,4],[39,53,37,9],[39,55,38,4],[39,60,38,9],[39,62,39,4],[39,67,39,9],[39,69,40,4],[39,74,40,9],[39,76,41,4],[39,81,41,9],[39,83,42,4],[39,88,42,9],[39,90,43,4],[39,95,43,9],[39,96,44,3],[40,4,46,2,"any"],[40,7,46,5],[40,9,46,7],[40,10,47,4],[40,16,47,10],[40,18,48,4],[40,23,48,9],[40,25,49,4],[40,32,49,11],[40,34,50,4],[40,40,50,10],[40,42,51,4],[40,49,51,11],[40,51,52,4],[40,58,52,11],[40,60,53,4],[40,67,53,11],[40,69,54,4],[40,76,54,11],[40,78,55,4],[40,83,55,9],[40,85,56,4],[40,90,56,9],[40,92,57,4],[40,97,57,9],[40,99,58,4],[40,104,58,9],[41,2,60,0],[41,3,60,1],[42,2,62,0],[42,6,62,6,"matchDayPatterns"],[42,22,62,22],[42,25,62,25],[43,4,63,2,"narrow"],[43,10,63,8],[43,12,63,10],[43,24,63,22],[44,4,64,2,"short"],[44,9,64,7],[44,11,64,9],[44,37,64,35],[45,4,65,2,"abbreviated"],[45,15,65,13],[45,17,65,15],[45,50,65,48],[46,4,66,2,"wide"],[46,8,66,6],[46,10,66,8],[47,2,67,0],[47,3,67,1],[48,2,68,0],[48,6,68,6,"parseDayPatterns"],[48,22,68,22],[48,25,68,25],[49,4,69,2,"any"],[49,7,69,5],[49,9,69,7],[49,10,69,8],[49,15,69,13],[49,17,69,15],[49,22,69,20],[49,24,69,22],[49,30,69,28],[49,32,69,30],[49,37,69,35],[49,39,69,37],[49,45,69,43],[49,47,69,45],[49,52,69,50],[49,54,69,52],[49,59,69,57],[50,2,70,0],[50,3,70,1],[51,2,72,0],[51,6,72,6,"matchDayPeriodPatterns"],[51,28,72,28],[51,31,72,31],[52,4,73,2,"narrow"],[52,10,73,8],[52,12,74,4],[52,82,74,74],[53,4,75,2,"any"],[53,7,75,5],[53,9,75,7],[54,2,76,0],[54,3,76,1],[55,2,77,0],[55,6,77,6,"parseDayPeriodPatterns"],[55,28,77,28],[55,31,77,31],[56,4,78,2,"any"],[56,7,78,5],[56,9,78,7],[57,6,79,4,"am"],[57,8,79,6],[57,10,79,8],[57,29,79,27],[58,6,80,4,"pm"],[58,8,80,6],[58,10,80,8],[58,29,80,27],[59,6,81,4,"midnight"],[59,14,81,12],[59,16,81,14],[59,24,81,22],[60,6,82,4,"noon"],[60,10,82,8],[60,12,82,10],[60,20,82,18],[61,6,83,4,"morning"],[61,13,83,11],[61,15,83,13],[61,24,83,22],[62,6,84,4,"afternoon"],[62,15,84,13],[62,17,84,15],[62,31,84,29],[63,6,85,4,"evening"],[63,13,85,11],[63,15,85,13],[63,23,85,21],[64,6,86,4,"night"],[64,11,86,9],[64,13,86,11],[65,4,87,2],[66,2,88,0],[66,3,88,1],[67,2,90,7],[67,6,90,13,"match"],[67,11,90,18],[67,14,90,21],[68,4,91,2,"ordinalNumber"],[68,17,91,15],[68,19,91,17],[68,23,91,17,"buildMatchPatternFn"],[68,48,91,36],[68,49,91,36,"buildMatchPatternFn"],[68,68,91,36],[68,70,91,37],[69,6,92,4,"matchPattern"],[69,18,92,16],[69,20,92,18,"matchOrdinalNumberPattern"],[69,45,92,43],[70,6,93,4,"parsePattern"],[70,18,93,16],[70,20,93,18,"parseOrdinalNumberPattern"],[70,45,93,43],[71,6,94,4,"valueCallback"],[71,19,94,17],[71,21,94,20,"value"],[71,26,94,25],[71,30,94,30,"parseInt"],[71,38,94,38],[71,39,94,39,"value"],[71,44,94,44],[71,46,94,46],[71,48,94,48],[72,4,95,2],[72,5,95,3],[72,6,95,4],[73,4,97,2,"era"],[73,7,97,5],[73,9,97,7],[73,13,97,7,"buildMatchFn"],[73,31,97,19],[73,32,97,19,"buildMatchFn"],[73,44,97,19],[73,46,97,20],[74,6,98,4,"matchPatterns"],[74,19,98,17],[74,21,98,19,"matchEraPatterns"],[74,37,98,35],[75,6,99,4,"defaultMatchWidth"],[75,23,99,21],[75,25,99,23],[75,31,99,29],[76,6,100,4,"parsePatterns"],[76,19,100,17],[76,21,100,19,"parseEraPatterns"],[76,37,100,35],[77,6,101,4,"defaultParseWidth"],[77,23,101,21],[77,25,101,23],[78,4,102,2],[78,5,102,3],[78,6,102,4],[79,4,104,2,"quarter"],[79,11,104,9],[79,13,104,11],[79,17,104,11,"buildMatchFn"],[79,35,104,23],[79,36,104,23,"buildMatchFn"],[79,48,104,23],[79,50,104,24],[80,6,105,4,"matchPatterns"],[80,19,105,17],[80,21,105,19,"matchQuarterPatterns"],[80,41,105,39],[81,6,106,4,"defaultMatchWidth"],[81,23,106,21],[81,25,106,23],[81,31,106,29],[82,6,107,4,"parsePatterns"],[82,19,107,17],[82,21,107,19,"parseQuarterPatterns"],[82,41,107,39],[83,6,108,4,"defaultParseWidth"],[83,23,108,21],[83,25,108,23],[83,30,108,28],[84,6,109,4,"valueCallback"],[84,19,109,17],[84,21,109,20,"index"],[84,26,109,25],[84,30,109,30,"index"],[84,35,109,35],[84,38,109,38],[85,4,110,2],[85,5,110,3],[85,6,110,4],[86,4,112,2,"month"],[86,9,112,7],[86,11,112,9],[86,15,112,9,"buildMatchFn"],[86,33,112,21],[86,34,112,21,"buildMatchFn"],[86,46,112,21],[86,48,112,22],[87,6,113,4,"matchPatterns"],[87,19,113,17],[87,21,113,19,"matchMonthPatterns"],[87,39,113,37],[88,6,114,4,"defaultMatchWidth"],[88,23,114,21],[88,25,114,23],[88,31,114,29],[89,6,115,4,"parsePatterns"],[89,19,115,17],[89,21,115,19,"parseMonthPatterns"],[89,39,115,37],[90,6,116,4,"defaultParseWidth"],[90,23,116,21],[90,25,116,23],[91,4,117,2],[91,5,117,3],[91,6,117,4],[92,4,119,2,"day"],[92,7,119,5],[92,9,119,7],[92,13,119,7,"buildMatchFn"],[92,31,119,19],[92,32,119,19,"buildMatchFn"],[92,44,119,19],[92,46,119,20],[93,6,120,4,"matchPatterns"],[93,19,120,17],[93,21,120,19,"matchDayPatterns"],[93,37,120,35],[94,6,121,4,"defaultMatchWidth"],[94,23,121,21],[94,25,121,23],[94,31,121,29],[95,6,122,4,"parsePatterns"],[95,19,122,17],[95,21,122,19,"parseDayPatterns"],[95,37,122,35],[96,6,123,4,"defaultParseWidth"],[96,23,123,21],[96,25,123,23],[97,4,124,2],[97,5,124,3],[97,6,124,4],[98,4,126,2,"dayPeriod"],[98,13,126,11],[98,15,126,13],[98,19,126,13,"buildMatchFn"],[98,37,126,25],[98,38,126,25,"buildMatchFn"],[98,50,126,25],[98,52,126,26],[99,6,127,4,"matchPatterns"],[99,19,127,17],[99,21,127,19,"matchDayPeriodPatterns"],[99,43,127,41],[100,6,128,4,"defaultMatchWidth"],[100,23,128,21],[100,25,128,23],[100,30,128,28],[101,6,129,4,"parsePatterns"],[101,19,129,17],[101,21,129,19,"parseDayPeriodPatterns"],[101,43,129,41],[102,6,130,4,"defaultParseWidth"],[102,23,130,21],[102,25,130,23],[103,4,131,2],[103,5,131,3],[104,2,132,0],[104,3,132,1],[105,0,132,2],[105,3]],"functionMap":{"names":["<global>","buildMatchPatternFn$argument_0.valueCallback","buildMatchFn$argument_0.valueCallback"],"mappings":"AAA;mBC6F,8BD;mBEe,oBF"},"hasCjsExports":false},"type":"js/module"}]}